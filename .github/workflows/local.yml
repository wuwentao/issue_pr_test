name: Local Runner

on: push

#on:
#  pull_request:
#    branches:
#      - main
#      - dev

env:
  PULL_REQUEST_ID: ${{ github.event.number }}
  CI_ROOT: /data/k510/github-actions
  TFTP_ROOT: /data/tftp_server
  NFS_ROOT: /data/nfs_server

defaults:
  run:
    shell: bash

concurrency: 
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_image:
    name: Build
    runs-on: [self-hosted]
    timeout-minutes: 45
    container:
      image: ai.b-bug.org:5000/k510_sdk_github
      env:
        CONF: k510_${{ matrix.cfg }}_defconfig
        ENV: pull-request
      volumes:
        - /data:/data
      options: --hostname pull-request
    strategy:
      matrix:
        cfg: ["crb_lp3_v1_2"]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          clean: false

      - name: Build job
        run: |
          echo "build job test"


  load_image:
    name: Load
    needs: build_image
    timeout-minutes: 5
    runs-on: [self-hosted]
    outputs:
      device: ${{ steps.get_dut.outputs.device }}
    container:
      image: ai.b-bug.org:5000/k510_sdk_github
      volumes:
        - /data:/data
    strategy:
      matrix:
        cfg: ["crb_lp3_v1_2"]
    steps:
      - name: Get DUT
        id: get_dut
        run: |
          echo "get available DUT"
          export HW_MODEL=`echo ${{ matrix.cfg }}|awk -F '_' '{print $1}'`
          export HW_VER=`echo ${{ matrix.cfg }}|awk -F '_' '{print $3"."$4}'`
          test -d bin || mkdir ./bin
          test -f ./bin/dut && rm -rf ./bin/dut
          wget -qc https://ai.b-bug.org/k510_buildroot/github/dut -O ./bin/dut
          chmod +x ./bin/dut
          device=$(./bin/dut show --dest available --hw_type k510 --hw_model $HW_MODEL --hw_ver $HW_VER )
          echo "script finished:"
          echo $device
          echo "::set-output name=device::$device"

      - name: Reserve DUT
        id: reserve_dut
        if: ${{ steps.get_dut.outputs.device != '[]' }}
        run: |
          set -x
          echo "reserve DUT"
          echo ${{needs.get_dut.outputs.device}}
          test -d bin || mkdir ./bin
          test -f ./bin/dut && rm -rf ./bin/dut
          wget -qc https://ai.b-bug.org/k510_buildroot/github/dut -O ./bin/dut
          chmod +x ./bin/dut
          device=${{ steps.get_dut.outputs.device }}
          echo $device
          available=$(./bin/dut convert $device)
          echo "available device args:"
          echo $available
          reserved=$(./bin/dut add --dest running --site github-actions --source $PULL_REQUEST_ID --job $GITHUB_RUN_ID $available )
          echo "reserved device:"
          echo $reserved
          echo "::set-output name=reserved::$reserved"

      - name: Load image
        run: |
          echo "available device:"
          echo ${{ steps.get_dut.outputs.device }}
          echo "reserved device:"
          echo ${{ steps.reserve_dut.outputs.reserved }}
          test -d bin || mkdir ./bin
          test -f ./bin/ci && rm -rf ./bin/ci
          wget -qc https://ai.b-bug.org/k510_buildroot/github/ci -O ./bin/ci
          chmod +x ./bin/ci
          export HW_MODEL=`echo ${{ matrix.cfg }}|awk -F '_' '{print $1}'`
          export HW_VER=`echo ${{ matrix.cfg }}|awk -F '_' '{print $3"_"$4}'`
          echo $HW_MODEL
          echo $HW_VER
          echo $PULL_REQUEST_ID
          echo $GITHUB_RUN_ID
          ./bin/ci --project k510_buildroot --merge_id $PULL_REQUEST_ID --pipeline_id $GITHUB_RUN_ID --hw_ver $HW_VER --hw_model $HW_MODEL
          
      - name: release dut
        id: release_dut
        if: ${{ always() }}
        run: |
          echo "release dut"
